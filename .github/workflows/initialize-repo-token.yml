# GitHub Workflow to initialize the .repo_token repo identifier token file. This workflow is intended to only take
# action when the infrastructure-live repo is first created from the template repo.
name: Initialize repo_token

on:
  push:
    branches:
    - main

jobs:
  gentoken:
    runs-on: ubuntu-latest
    steps:
    - name: Do not run on template repository
      id: is_template
      shell: bash
      # This workflow runs when we detect a change to main, but we don't want to run this actions on the origin
      # template repository. To support this, we use the GitHub rest API to identify if the current repository is a
      # template repository or not and if it is, exit the workflow.
      run: |
        is_template="$(curl --silent -X GET \
          -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
          -H 'Accept: application/vnd.github.baptiste-preview+json' \
          https://api.github.com/repos/$GITHUB_REPOSITORY \
          | jq '.is_template')"
        echo "::set-output name=is_template::$is_template"

    - uses: actions/checkout@v3

    - name: Check if .repo_token file exists
      id: has_repo_token
      shell: bash
      run: |
        if [[ -f .repo_token ]]; then
          echo '::set-output name=has_repo_token::true'
        else
          echo '::set-output name=has_repo_token::false'
        fi

    - name: Generating repo_token file
      if: "${{ steps.is_template.outputs.is_template == 'false' && steps.has_repo_token.outputs.has_repo_token == 'false' }}"
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -yy pwgen
        pwgen -n -s -1 32 > .repo_token

    - name: Committing and pushing repo_token file
      if: "${{ steps.is_template.outputs.is_template == 'false' && steps.has_repo_token.outputs.has_repo_token == 'false' }}"
      shell: bash
      # Reinitialize git with the generated repo token.
      # We use `git checkout --orphan` to create a branch in a git init-like state.
      # By force pushing this as `main` we end up with a new clean git history.
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
        git config --global user.name "github-actions[bot]" && \
        git checkout --orphan temp-branch && \
        git add . && \
        git commit -m 'Initial commit' && \
        git push origin temp-branch:main -f
